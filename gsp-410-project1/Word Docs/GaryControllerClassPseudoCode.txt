class contoller

private

//we need a singleton of the comm object
Comm
//an array of games gets us around multi-threading
games[4]
//we only need 1 model
Model[4]
UI[4]

public

contoller()
~contoller()

messObj getMessage()
{
	check que

         if(que)
	{

		 messObj mess = pullMessObjOutOfQue()

		return mess
	}
	else
	{
		return NULL;
	}

}


readMess(messObj)
{
	//type as in is it for server, game, client
	type = messBreakdownType(messObj);


	switch type

	case 1
	for game 
	sendMessTogame(messObj)

	case 2
	for server
        sendMessToServer(messObj)

	case 3
	for client
	sendMessToClient(messObj)
}


sendMessToGame(messObj)
{
	//num as in mess number in regards to maybe a list of messages
        messNum = messBreakdownNum(messObj)

	switch messNum

	case 1
	//for game 1
	//send messege to game 1
	game[messNum].recieveMess(messObj)

	case 2 
	//for game 2
	//send messege to game 2
	game[messNum].recieveMess(messObj)

	case 3 
	//for game 3
	//send messege to game 3
	game[messNum].recieveMess(messObj)

	case 4 
	//for game 4
	//send messege to game 4
	game[messNum].recieveMess(messObj)



}

sendMessToServer(messObj)
{
	//num as in mess number in regards to maybe a list of messages
        messNum = messBreakdownNum(messObj)

	switch messNum

	case 1
	//some kind of message
	server[messNum].recieveMess(messObj)

	case 2 	
	//some kind of message
	server[messNum].recieveMess(messObj)

	
}
sendMessToClient(messObj)
{
	//num as in mess number in regards to maybe a list of messages
        messNum = messBreakdownNum(messObj)

	switch messNum

	case 1
	some kind of message
	client[messNum].recieveMess(messObj)

	case 2 
	some kind of message
	client[messNum].recieveMess(messObj)

	
}

//type as in is it for server, game, client
type(enum) messBreakdownType(messObj)
{
	extract the type value from messObj

	//pass it back	
	return type
}

//num as in mess number in regards to maybe a list of messages
mesNum(enum) messBreakdownNum(messObj)
{
	extract the message num value from messObj

	//pass it back	
	return mesNum
}



messObj pullMessObjOutOfQue()
{
	something que pulling like

        return messObj
}


